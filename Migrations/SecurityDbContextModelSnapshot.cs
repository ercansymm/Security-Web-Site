// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecurityWebSite.Models;

#nullable disable

namespace SecurityWebSite.Migrations
{
    [DbContext(typeof(SecurityDbContext))]
    partial class SecurityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecurityWebSite.Models.Firm", b =>
                {
                    b.Property<string>("CardName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("PersonelRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("Ref")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("Firms");
                });

            modelBuilder.Entity("SecurityWebSite.Models.Personel", b =>
                {
                    b.Property<string>("CardName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("Gun")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("Ref")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Shift")
                        .HasColumnType("bit");

                    b.Property<bool?>("Working")
                        .HasColumnType("bit");

                    b.ToTable("Personel", (string)null);
                });

            modelBuilder.Entity("SecurityWebSite.Models.User", b =>
                {
                    b.Property<string>("CardName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("Ref")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecurityWebSite.Models.WebDe", b =>
                {
                    b.Property<string>("CardDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("Ref")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("WebDes");
                });
#pragma warning restore 612, 618
        }
    }
}
